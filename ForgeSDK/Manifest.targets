<Project>
    <PropertyGroup>
        <ManifestOutputFolder Condition="'$(ManifestOutputFolder)' == ''">$(ProjectDir)</ManifestOutputFolder>
        <ManifestOutputPath>$(ManifestOutputFolder)manifest.json</ManifestOutputPath>

        <ManifestCopyFiles Condition="'$(ManifestCopyFiles)' == '' AND '$(ManifestId)' != ''">true</ManifestCopyFiles>
        <ManifestEntryPoint Condition="'$(ManifestEntryPoint)' == '' and '$(ProjectType)' == 'Module'">$(TargetFileName)</ManifestEntryPoint>
    </PropertyGroup>

    <Target Name="ManifestCheckup">
        <Warning Condition="'$(ManifestId)' == ''" Text="The manifest id is not set. The manifest will not be generated."/>
    </Target>

    <!-- Generate the manifest.json based on project definitions -->
    <Target Name="GenerateManifest" Condition="'$(ManifestId)' != ''" BeforeTargets="PreBuildEvent" Outputs="$(ManifestOutputPath)">
        <PropertyGroup>
            <ManifestType Condition="'$(ManifestType)' == ''">$(ProjectType)</ManifestType>

            <!-- If no Repository is set (often with modules outside of the pipeline) -->
            <ManifestAssetUrl Condition="'$(ManifestAssetUrl)' == '' AND '$(RepositoryUrl)' == ''">$(ReleaseOutputPath)</ManifestAssetUrl>
            <ManifestAssetUrl Condition="'$(ManifestAssetUrl)' == ''">$(RepositoryUrl)/releases/latest/download/$(ReleaseFile)</ManifestAssetUrl>
        </PropertyGroup>

        <Message Text="Creating manifest with id: '$(ManifestId)' at: '$(ManifestOutputFolder)'" Importance="high" />

        <CreateManifestTask
            ManifestId="$(ManifestId)"
            ManifestName="$(ManifestName)"
            ManifestVersion="$(ManifestVersion)"
            ManifestType="$(ManifestType.ToLower())"
            ManifestAssetUrl="$(ManifestAssetUrl)"
            ManifestClearResidualFiles="$(ManifestClearResidualFiles)"
            ManifestEmbedded="$(ManifestEmbedded)"

            ManifestOutputFolder="$(ManifestOutputFolder)"

            ManifestEntryPoint="$(ManifestEntryPoint)"
            ManifestLibraryFolder="$(ManifestLibraryFolder)"

            ManifestIgnoredEntries="@(ManifestIgnoredEntries)"
            ManifestRelationships="@(ManifestRelationships)">
            <Output TaskParameter="ManifestOutputPath" PropertyName="ManifestOutputPath" />
        </CreateManifestTask>

        <Message Text="Created manifest '$(ManifestId)' at: '$(ManifestOutputPath)'" Importance="high" />
    </Target>

    <!-- Add output to either embedded or general output -->
    <ItemGroup Condition="'$(ManifestCopyFiles)' == 'true'">
        <EmbeddedResource Condition="'$(ManifestEmbedded)' == 'true'" Remove="$(ManifestOutputPath)"/>
        <EmbeddedResource Condition="'$(ManifestEmbedded)' == 'true'" Include="$(ManifestOutputPath)">
            <LogicalName>manifest.json</LogicalName>
            <!-- Would get the assembly name as a prefix otherwise -->
        </EmbeddedResource>
        <None Remove="$(ManifestOutputPath)"/>
        <None Include="$(ManifestOutputPath)">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>
</Project>
